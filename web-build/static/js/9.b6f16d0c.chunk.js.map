{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/TokenSymbol.tsx","src/components/LPTokenSelect.tsx","src/hooks/useLPTokensState.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/rpc.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/hooks/useZapper.tsx","src/hooks/useRemoveLiquidityState.tsx","src/screens/RemoveLiquidityScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","darkMode","textDark","textLight","placeholder","useContext","GlobalContext","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","TokenSymbol","medium","caption","marginLeft","LPTokenList","state","emptyText","Item","renderItem","item","key","selected","onSelectToken","setSelectedLPToken","data","lpTokens","sort","p1","p2","m1","multiplier","m2","apy","length","EmptyList","text","keyExtractor","margin","textAlign","width","LPTokenItem","textMedium","balance","formatBalance","decimals","ITEM_SEPARATOR_HEIGHT","alignItems","tokenA","small","replaceWETH","tokenB","flex","light","LPTokenSelect","expanded","selectedLPToken","onExpand","updatingLPTokens","useLPTokensState","mode","useTokenPairState","provider","tokens","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","setAmount","getPair","useSDK","updateLPTokens","fetchMyPools","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","useEffect","useAsyncEffect","undefined","useDelayedOnBlockEffect","block","fromToken","toToken","updateLastTimeRefreshed","Date","now","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","name","type","zeros","numZeros","padEnd","getTokenName","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","setChainIdOverride","send","method","params","payload","id","Math","floor","random","callback","err","error","console","_provider","sendAsync","fromAddress","typeData","typeDataString","JSON","stringify","catch","r","slice","s","v","parseInt","chainIdOverride","to","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","i","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","useZapper","ethereum","getTrade","calculateAmountOfLPTokenMinted","useSwapRouter","allowedSlippage","ttl","zapSlippage","Percent","populateSwapData","signer","trade","Router","swapCallParameters","feeOnTransfer","recipient","ZAP_IN","router","getContract","ROUTER","populateTransaction","methodName","args","zapIn","fromAmount","TokenAmount","convertToken","div","getOutputAmount","lpTokenAmount","contract","liquidityToken","deduct","isETH","ethers","constants","Zero","estimateGas","ZapIn","gasLimit","mul","logTransaction","map","arg","getZapOutSwappedAmount","outputToken","lpToken","fromReserve","parseCurrencyAmount","reserveOf","totalSupply","outputAmount","zapOut","ZAP_OUT","getTime","getAddress","permit","ZapOutWithPermit","useRemoveLiquidityState","getTokenAllowance","updateTokens","removeLiquidity","removeLiquidityETH","setOutputToken","removing","setRemoving","setFromSymbol","setToSymbol","minAllowance","BigNumber","from","pow","sub","allowance","gte","toReserve","setFromAmount","parseBalance","setToAmount","removeFromRouter","toAmount","liquidity","isWETH","amountToRemove","amountToRemoveETH","onRemove","RemoveLiquidity","View","marginTop","large","Border","LPTokenOutputItem","Selectable","FlexView","TokenLogo","Text","CloseIcon","SelectIcon","AmountInput","TokenInput","onAmountChanged","Heading","AmountInfo","useMemo","add","FEE","InfoBox","Meta","label","Controls","setError","fromSymbol","toSymbol","approveRequired","isEmptyValue","gt","FetchingButton","ErrorMessage","RemoveButton","Button","RemoveLiquidityScreen","Screen","Container","Content","Title","WebFooter","height","padding"],"mappings":"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","file":"static/js/9.b6f16d0c.chunk.js","sourcesContent":["import React, { FC, useContext } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                // color: props.disabled ? placeholder : props.amount ? textDark : textLight\n                color: darkMode ? \"#FFFFFF\" : \"#333333\"\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance } from \"../utils\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <props.Item token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return <Item key={item.symbol} token={item} selected={false} onSelectToken={state.setSelectedLPToken} />;\n        },\n        [state.setSelectedLPToken]\n    );\n    const data = state.lpTokens.sort((p1, p2) => {\n        const m1 = p1.multiplier || 0;\n        const m2 = p2.multiplier || 0;\n        return m1 === m2 ? (p2.apy || 0) - (p1.apy || 0) : m2 - m1;\n    });\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => item.symbol} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 6);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@iwanwang/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyPools, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LPTokensState extends TokenPairState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    pair?: Pair;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\nlet updatingLPTokens = false;\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useTokenPairState();\n    const { provider, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [amount, setAmount] = useState(\"\");\n    const { getPair } = useSDK();\n\n    const updateLPTokens = async () => {\n        if (address && provider && tokens.length > 0 && !updatingLPTokens) {\n            try {\n                updatingLPTokens = true;\n                const data = await (mode === \"my-pools\"\n                    ? fetchMyPools(address, tokens, provider)\n                    : mode === \"pools\"\n                    ? fetchPools(address, tokens, provider)\n                    : mode === \"my-lp-tokens\"\n                    ? fetchMyLPTokens(address, tokens, provider)\n                    : fetchMyUniswapLPTokens(address, tokens, provider));\n                if (data) {\n                    setLPTokens(data);\n                }\n            } finally {\n                updatingLPTokens = false;\n                setLoading(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        setLoading(true);\n        setPair(undefined);\n        if (selectedLPToken && provider) {\n            try {\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\n            } catch (e) {\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [selectedLPToken, provider]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\n        toToken: state.toToken || selectedLPToken?.tokenB,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        pair,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.call = exports.getChainId = exports.setChainIdOverride = exports.signData = exports.send = void 0;\nconst randomId = () => Math.floor(Math.random() * 10000000000);\nexports.send = (provider, method, params) => new Promise((resolve, reject) => {\n    const payload = {\n        id: randomId(),\n        method,\n        params,\n    };\n    const callback = (err, result) => {\n        if (err) {\n            reject(err);\n        }\n        else if (result.error) {\n            console.error(result.error);\n            reject(result.error);\n        }\n        else {\n            resolve(result.result);\n        }\n    };\n    let _provider = provider.provider || provider;\n    if (_provider.sendAsync) {\n        _provider.sendAsync(payload, callback);\n    }\n    else {\n        _provider.send(payload, callback);\n    }\n});\nexports.signData = (provider, fromAddress, typeData) => __awaiter(void 0, void 0, void 0, function* () {\n    const typeDataString = typeof typeData === 'string' ? typeData : JSON.stringify(typeData);\n    const result = yield exports.send(provider, 'eth_signTypedData_v4', [fromAddress, typeDataString])\n        .catch((error) => {\n        if (error.message === 'Method eth_signTypedData_v4 not supported.') {\n            return exports.send(provider, 'eth_signTypedData', [fromAddress, typeData]);\n        }\n        else {\n            throw error;\n        }\n    });\n    return {\n        r: result.slice(0, 66),\n        s: '0x' + result.slice(66, 130),\n        v: parseInt(result.slice(130, 132), 16),\n    };\n});\nlet chainIdOverride = null;\nexports.setChainIdOverride = (id) => { chainIdOverride = id; };\nexports.getChainId = (provider) => __awaiter(void 0, void 0, void 0, function* () { return chainIdOverride || exports.send(provider, 'eth_chainId'); });\nexports.call = (provider, to, data) => exports.send(provider, 'eth_call', [{\n        to,\n        data,\n    }, 'latest']);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import { useCallback, useContext } from \"react\";\n\nimport { Percent, Router, TokenAmount } from \"@iwanwang/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { ROUTER, ZAP_IN, ZAP_OUT } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, deduct, getContract, isETH, parseCurrencyAmount } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSDK from \"./useSDK\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useZapper = () => {\n    const { ethereum } = useContext(EthersContext);\n    const { getPair, getTrade, calculateAmountOfLPTokenMinted } = useSDK();\n    const { allowedSlippage, ttl } = useSwapRouter();\n    const zapSlippage = new Percent(\"3\", \"100\"); // 3.0%\n\n    const populateSwapData = async (\n        fromToken: Token,\n        toToken: Token,\n        amount: ethers.BigNumber,\n        provider: ethers.providers.BaseProvider,\n        signer: ethers.Signer\n    ) => {\n        const trade = await getTrade(fromToken, toToken, amount, provider);\n        if (!trade) throw new Error(\"Cannot find trade\");\n        const params = Router.swapCallParameters(trade, {\n            feeOnTransfer: false,\n            allowedSlippage,\n            recipient: ZAP_IN,\n            ttl\n        });\n        const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n        const tx = await router.populateTransaction[params.methodName](...params.args, { value: params.value });\n        return tx.data || \"\";\n    };\n\n    const zapIn = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider,\n            signer: ethers.Signer\n        ) => {\n            const pair = await getPair(fromToken, toToken, provider);\n            const amount = new TokenAmount(convertToken(fromToken), fromAmount.div(2).toString());\n            const lpTokenAmount = await calculateAmountOfLPTokenMinted(pair, amount, pair.getOutputAmount(amount)[0]);\n            if (!lpTokenAmount) throw new Error(\"Cannot calculate LP token amount\");\n            const contract = getContract(\"ZapIn\", ZAP_IN, signer);\n            const args = [\n                fromToken.address,\n                pair.liquidityToken.address,\n                fromAmount,\n                deduct(lpTokenAmount, zapSlippage),\n                ROUTER,\n                ROUTER,\n                await populateSwapData(fromToken, toToken, fromAmount.div(2), provider, signer)\n            ];\n            const value = isETH(fromToken) ? fromAmount : ethers.constants.Zero;\n            const gasLimit = await contract.estimateGas.ZapIn(...args, { value });\n            const tx = await contract.ZapIn(...args, {\n                value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"ZapIn_General_V2.ZapIn()\", ...args.map(arg => arg.toString()));\n        },\n        [populateSwapData]\n    );\n\n    const getZapOutSwappedAmount = async (\n        outputToken: Token,\n        lpToken: LPToken,\n        lpTokenAmount: ethers.BigNumber,\n        provider: ethers.providers.BaseProvider\n    ) => {\n        let fromToken: Token;\n        let toToken: Token;\n        if (outputToken === lpToken.tokenA) {\n            fromToken = lpToken.tokenB;\n            toToken = lpToken.tokenA;\n        } else if (outputToken === lpToken.tokenB) {\n            fromToken = lpToken.tokenA;\n            toToken = lpToken.tokenB;\n        } else {\n            throw new Error(\"Wrong outputToken\");\n        }\n        const pair = await getPair(fromToken, toToken, provider);\n        const fromReserve = parseCurrencyAmount(pair.reserveOf(convertToken(fromToken)), fromToken.decimals);\n        const fromAmount = lpTokenAmount.mul(fromReserve).div(lpToken.totalSupply);\n        const trade = await getTrade(fromToken, toToken, fromAmount, provider);\n        if (!trade) throw new Error(\"Cannot find trade\");\n        return parseCurrencyAmount(trade.outputAmount);\n    };\n\n    const zapOut = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (\n            lpToken: LPToken,\n            outputToken: Token,\n            amount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider,\n            signer: ethers.Signer\n        ) => {\n            const contract = getContract(\"ZapOut\", ZAP_OUT, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                ZAP_OUT,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                outputToken.address,\n                lpToken.address,\n                amount,\n                deduct(await getZapOutSwappedAmount(outputToken, lpToken, amount, provider), zapSlippage),\n                amount,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await contract.estimateGas.ZapOutWithPermit(...args);\n            const tx = await contract.ZapOutWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"ZapOut_General_V1.ZapOutWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [getZapOutSwappedAmount]\n    );\n\n    return {\n        zapIn,\n        zapOut,\n        getZapOutSwappedAmount\n    };\n};\n\nexport default useZapper;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, formatBalance, isWETH, parseBalance, parseCurrencyAmount } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useZapper from \"./useZapper\";\n\nexport interface RemoveLiquidityState extends LPTokensState {\n    outputToken?: Token;\n    setOutputToken: (token?: Token) => void;\n    onRemove: () => Promise<void>;\n    removing: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useRemoveLiquidityState: () => RemoveLiquidityState = () => {\n    const state = useLPTokensState(\"my-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { removeLiquidity, removeLiquidityETH } = useSwapRouter();\n    const { zapOut } = useZapper();\n    const [loading, setLoading] = useState(false);\n    const [outputToken, setOutputToken] = useState<Token>();\n    const [removing, setRemoving] = useState(false);\n\n    /*useEffect(() => {\n        setOutputToken(undefined);\n    }, [state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [outputToken]);*/\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            state.setFromSymbol(state.selectedLPToken.tokenA.symbol);\n            state.setToSymbol(state.selectedLPToken.tokenB.symbol);\n\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, ROUTER);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            state.setFromSymbol(\"\");\n            state.setToSymbol(\"\");\n        }\n    }, [signer, state.selectedLPToken]);\n\n    // tslint:disable-next-line:max-func-body-length\n    useAsyncEffect(async () => {\n        if (\n            state.selectedLPToken &&\n            state.selectedLPToken.totalSupply &&\n            state.pair &&\n            state.fromToken &&\n            state.toToken\n        ) {\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\n                const fromReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.fromToken)),\n                    state.fromToken.decimals\n                );\n                const toReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.toToken)),\n                    state.toToken.decimals\n                );\n                state.setFromAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(fromReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenA.decimals\n                    )\n                );\n                state.setToAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(toReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenB.decimals\n                    )\n                );\n            }\n        }\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\n\n    const removeFromRouter = async () => {\n        if (state.selectedLPToken && signer) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            const toAmount = parseBalance(state.toAmount, state.toToken!.decimals);\n            const liquidity = parseBalance(state.amount, state.selectedLPToken.decimals);\n            if (isWETH(state.fromToken) || isWETH(state.toToken)) {\n                const token = isWETH(state.fromToken) ? state.toToken! : state.fromToken!;\n                const amountToRemove = isWETH(state.fromToken) ? toAmount : fromAmount;\n                const amountToRemoveETH = isWETH(state.fromToken) ? fromAmount : toAmount;\n                const tx = await removeLiquidityETH(token, liquidity, amountToRemove, amountToRemoveETH, signer);\n                await tx.wait();\n            } else {\n                const tx = await removeLiquidity(\n                    state.fromToken!,\n                    state.toToken!,\n                    liquidity,\n                    fromAmount,\n                    toAmount,\n                    signer\n                );\n                await tx.wait();\n            }\n        }\n    };\n\n    const onRemove = useCallback(async () => {\n        if (\n            state.fromAmount &&\n            state.toAmount &&\n            state.selectedLPToken &&\n            state.amount &&\n            // outputToken &&\n            provider &&\n            signer\n        ) {\n            setRemoving(true);\n            try {\n                // if (outputToken === state.selectedLPToken) {\n                await removeFromRouter();\n                // } else {\n                //     const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                //     const tx = await zapOut(state.selectedLPToken, outputToken, amount, provider, signer);\n                //     await tx.wait();\n                // }\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setRemoving(false);\n            }\n        }\n    }, [\n        state.fromAmount,\n        state.toAmount,\n        state.selectedLPToken,\n        state.amount,\n        state.updateLPTokens,\n        removeFromRouter,\n        zapOut,\n        updateTokens,\n        // outputToken,\n        provider,\n        signer\n    ]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        outputToken,\n        setOutputToken,\n        onRemove,\n        removing\n    };\n};\n\nexport default useRemoveLiquidityState;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Selectable from \"../components/Selectable\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useRemoveLiquidityState, { RemoveLiquidityState } from \"../hooks/useRemoveLiquidityState\";\nimport { FEE } from \"../hooks/useSwapRouter\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { deduct, formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst RemoveLiquidityScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                {/* <BackgroundImage /> */}\n                <Content>\n                    <Title text={t(\"remove-liquidity\")} />\n                    <Text light={true}>{t(\"remove-liquidity-desc\")}</Text>\n                    <RemoveLiquidity />\n                </Content>\n                {/* {Platform.OS === \"web\" && <WebFooter />} */}\n\n                {!IS_DESKTOP && <WebFooter />}\n\n                {IS_DESKTOP && <View style={{ height: 200, padding: 20 }}></View>}\n            </Container>\n            <LiquiditySubMenu />\n        </Screen>\n    );\n};\n\nconst RemoveLiquidity = () => {\n    const t = useTranslation();\n    const state = useRemoveLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={t(\"your-liquidity\")}\n                emptyText={t(\"you-dont-have-liquidity\")}\n                Item={LPTokenItem}\n            />\n            {/*<Border />*/}\n            {/*<OutputTokenSelect state={state} />*/}\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst OutputTokenSelect = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    if (!state.selectedLPToken) return <Heading text={t(\"output-tokens\")} disabled={true} />;\n    const onSelectToken = (token: Token) => () => state.setOutputToken(state.outputToken ? undefined : token);\n    return (\n        <View>\n            <Heading text={t(\"output-tokens\")} />\n            <TokenOutputItem\n                token={state.selectedLPToken.tokenA}\n                otherToken={state.selectedLPToken.tokenB}\n                selected={state.outputToken === state.selectedLPToken.tokenA}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenA}\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenA)}\n            />\n            <TokenOutputItem\n                token={state.selectedLPToken.tokenB}\n                otherToken={state.selectedLPToken.tokenA}\n                selected={state.outputToken === state.selectedLPToken.tokenB}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken.tokenB}\n                onSelectToken={onSelectToken(state.selectedLPToken.tokenB)}\n            />\n            <LPTokenOutputItem\n                token={state.selectedLPToken}\n                selected={state.outputToken === state.selectedLPToken}\n                hidden={!!state.outputToken && state.outputToken !== state.selectedLPToken}\n                onSelectToken={onSelectToken(state.selectedLPToken)}\n            />\n        </View>\n    );\n};\n\nconst TokenOutputItem = (props: {\n    token: Token;\n    otherToken: Token;\n    selected: boolean;\n    hidden: boolean;\n    onSelectToken: () => void;\n}) => {\n    const t = useTranslation();\n    if (props.hidden) return <View />;\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={props.onSelectToken}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenSymbol token={props.token} />\n                <Text note={true} style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {IS_DESKTOP &&\n                        t(\"will-be-converted-to\", {\n                            fromSymbol: props.otherToken.symbol,\n                            toSymbol: props.token.symbol\n                        })}\n                </Text>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport const LPTokenOutputItem = (props: {\n    token: LPToken;\n    selected: boolean;\n    hidden: boolean;\n    onSelectToken: () => void;\n}) => {\n    if (props.hidden) return <View />;\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={props.onSelectToken}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol} + {props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1 }} />\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst AmountInput = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    if (!state.selectedLPToken /* || !state.outputToken*/) {\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={t(\"amount-of-tokens\")}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: RemoveLiquidityState }) => {\n    const t = useTranslation();\n    const disabled = !state.selectedLPToken || !state.fromToken || !state.toToken;\n    const outputAmount = useMemo(() => {\n        if (state.fromToken && state.outputToken === state.fromToken) {\n            const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n            return formatBalance(amount.add(deduct(amount, FEE)), state.fromToken.decimals);\n        } else if (state.toToken && state.outputToken === state.toToken) {\n            const amount = parseBalance(state.toAmount, state.toToken.decimals);\n            return formatBalance(amount.add(deduct(amount, FEE)), state.toToken.decimals);\n        }\n    }, [state.outputToken, state.fromToken, state.toToken, state.fromAmount, state.toAmount]);\n    return (\n        <InfoBox>\n            {(state.outputToken === state.fromToken || state.outputToken === state.toToken) && (\n                <AmountMeta amount={outputAmount} suffix={state.outputToken?.symbol} disabled={disabled} />\n            )}\n            <Meta\n                label={state.fromToken ? state.fromToken.symbol : t(\"1st-token\")}\n                text={state.fromAmount}\n                disabled={disabled}\n            />\n            <Meta\n                label={state.toToken ? state.toToken.symbol : t(\"2nd-token\")}\n                text={state.toAmount}\n                disabled={disabled}\n            />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: RemoveLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = /*state.outputToken === state.selectedLPToken && */ !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\n                <RemoveButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <RemoveButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst RemoveButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: RemoveLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onRemove().catch(onError);\n    }, [state.onRemove, onError]);\n    return <Button title={t(\"remove-liquidity\")} disabled={disabled} loading={state.removing} onPress={onPress} />;\n};\n\nexport default RemoveLiquidityScreen;\n"],"sourceRoot":""}