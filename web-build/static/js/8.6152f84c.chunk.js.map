{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/Select.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/UnsupportedButton.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","darkMode","textDark","textLight","placeholder","useContext","GlobalContext","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","TokenSymbol","medium","caption","marginLeft","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","small","width","name","Item","ITEM_SEPARATOR_HEIGHT","paddingLeft","paddingRight","selected","selectable","setOption","undefined","option","alignItems","flex","description","Select","expanded","onExpand","options","map","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","UnsupportedButton","state","fromSymbol","toSymbol","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","FlexView","TokenLogo","View","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","onChangeSymbol","includes","ExperimentalNotice","onPressContract","useLinker","contractURL","marginVertical","useSwapState","useTokenPairState","chainId","signer","kovanSigner","updateTokens","getTrade","useSDK","useSwapRouter","swap","calculateSwapFee","useSettlement","calculateLimitOrderFee","calculateLimitOrderReturn","createOrder","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","fromToken","isWETH","constants","WeiPerEther","Token","toToken","WETH","Fetcher","fetchPairData","pair","parseBalance","priceOf","toFixed","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","console","log","sub","onSwap","result","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","isETH","Swap","large","Border","OrderTypeSelect","FromTokenSelect","customTokens","Heading","ETH","ToTokenSelect","limit","setToSymbol","AmountInput","TokenInput","onAmountChanged","setFromAmount","AmountNotice","lte","PriceInput","marketPrice","executionPrice","invert","Zero","maxButtonText","LimitOrderUnsupportedNotice","NoPairNotice","TradeInfo","isETHWETHPair","InfoBox","WrapInfo","SwapInfo","outputAmount","price","impact","priceImpact","Meta","label","SwapControls","error","setError","approveRequired","fromTokenAllowed","gt","FetchingButton","ROUTER","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","LimitOrderInfo","d","LimitOrderControls","getTokenAllowance","allowed","setAllowed","SETTLEMENT","allowance","BigNumber","from","gte","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","Content","Title","light","WebFooter","padding"],"mappings":"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","file":"static/js/8.6152f84c.chunk.js","sourcesContent":["import React, { FC, useContext } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                // color: props.disabled ? placeholder : props.amount ? textDark : textLight\n                color: darkMode ? \"#FFFFFF\" : \"#333333\"\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React, { useContext } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => {\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n            {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n        </Text>\n    );\n}\n\nexport default TokenAmount;\n","import React, {useContext} from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => {\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Text\n            caption={true}\n            numberOfLines={1}\n            ellipsizeMode={\"tail\"}\n            style={{ \n                marginLeft: Spacing.small, \n                width: 180,\n                color: darkMode ? \"#FFFFFF\" : \"#333333\"\n            }}\n            disabled={props.disabled}>\n            {IS_DESKTOP ? props.token.name : props.token.symbol}\n        </Text>\n    );\n}\n\nexport default TokenName;\n","import React, { FC, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    return (\n        <View>\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\n                {props.options.map(option => (\n                    <Item\n                        key={option.key}\n                        option={option}\n                        setOption={props.setOption}\n                        selected={option.key === props.option?.key}\n                    />\n                ))}\n            </Expandable>\n            {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"} style={{\n                        color: darkMode ? \"#4B607E\" : \"#333333\"\n                    }}>{props.option.title}</Text>\n                    <Text note={true} style={{\n                        marginTop: 4,\n                        color: darkMode ? \"#AAAAAA\" : \"#333333\"\n                    }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n\n    const { darkMode } = useContext(GlobalContext);\n\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ \n                                flex: 1, \n                                textAlign: \"right\",\n                                color: darkMode ? \"#FFFFFF\" : \"#333333\"\n                            }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const t = useTranslation();\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={t(\"experimental-notice\")}\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@iwanwang/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, isETH, isWETH, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSettlement from \"./useSettlement\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const { calculateLimitOrderFee, calculateLimitOrderReturn } = useSettlement();\n    const { createOrder } = useSettlement();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (isWETH(state.fromToken)) {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken, provider);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [chainId, provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        console.log(\"---------setTrade\");\n                        console.log(\"--------- from : \" + typeof(state.fromToken) + \", to : \" + typeof(state.toToken) + \", amount : \" + typeof(amount) + \", provider : \" + typeof(provider));\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (isETH(state.fromToken) || isETH(state.toToken)),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Select, { Option } from \"../components/Select\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst SwapScreen = () => {\n    const t = useTranslation();\n    const { darkMode } = useContext(GlobalContext);\n    return (\n        <Screen>\n            <Container>\n                {/* <BackgroundImage /> */}\n                <Content>\n                    <Title text={t(\"new-order\")} style={{\n                        color: darkMode ? \"#FFFFFF\" : \"#333333\"\n                    }} />\n                    <Text light={true} style={{\n                        color: darkMode ? \"#4B607E\" : \"#333333\"\n                    }}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {/* {Platform.OS === \"web\" && <WebFooter />} */}\n\n                {!IS_DESKTOP && <WebFooter />}\n\n                <View style={{ height: 200, padding: 20 }}>\n                </View>\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View style={{ marginTop: Spacing.small }}>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const options: Option[] = [\n        { key: \"market\", title: t(\"market-order\"), description: t(\"market-order-desc\") },\n        { key: \"limit\", title: t(\"limit-order\"), description: t(\"limit-order-desc\") }\n    ];\n    return (\n        <View>\n            <Select\n                title={t(\"order-type\")}\n                options={options}\n                option={options.find(option => option.key === state.orderType)}\n                setOption={option => state.setOrderType(option?.key as OrderType | undefined)}\n            />\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { tokens, customTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={t(\"token-to-sell\")} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => isETH(token)) : null;\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token =>\n                    (!customTokens.find(tk => tk.address === token.address) && token.balance.isZero()) ||\n                    (state.orderType === \"limit\" && isETH(token))\n                }\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    const limit = state.orderType === \"limit\";\n    const onChangeSymbol = (symbol: string) => {\n        state.setToSymbol(limit && symbol === \"ETH\" ? \"WETH\" : symbol);\n    };\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={onChangeSymbol}\n                hidden={token => token.symbol === state.fromSymbol || (limit && isETH(token))}\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? t(\"token-not-supported-in-beta\")\n                        : t(\"maximum-allowed-amount-in-beta\", {\n                            amount: formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals),\n                            symbol: state.fromSymbol\n                        })\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"minimum-price\")} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.invert().toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={t(\"minimum-price\") + \" (\" + state.fromSymbol + \"/\" + state.toSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={t(\"-market-\")}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"eth-not-supported-for-limit-orders\")}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small, marginHorizontal: Spacing.tiny }}\n        />\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && isETH(state.fromToken)) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                    <SwapInfo state={state} disabled={disabled} />\n                )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"price-impact\")} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n                !state.toToken ||\n                isEmptyValue(state.fromAmount) ||\n                (!state.loading && !state.trade) ? (\n                    <SwapButton state={state} onError={setError} disabled={true} />\n                ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                    <InsufficientBalanceButton symbol={state.fromSymbol} />\n                ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                    <UnwrapButton state={state} onError={setError} />\n                ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                    <WrapButton state={state} onError={setError} />\n                ) : state.unsupported ? (\n                    <UnsupportedButton state={state} />\n                ) : state.loading || !state.trade ? (\n                    <FetchingButton />\n                ) : (\n                                        <>\n                                            <ApproveButton\n                                                token={state.fromToken}\n                                                spender={ROUTER}\n                                                onSuccess={() => state.setFromTokenAllowed(true)}\n                                                onError={setError}\n                                                hidden={!approveRequired}\n                                            />\n                                            <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                                        </>\n                                    )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={t(\"swap-\", {\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\n            })}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={t(\"market-price\")}\n                text={state.trade?.executionPrice?.invert().toFixed(8) || undefined}\n                suffix={state.fromSymbol + \" / \" + state.toSymbol}\n                disabled={d}\n            />\n            <Meta label={t(\"relayer-fee-amount\")} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"swap-fee-amount\")} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"expiration\")} text={t(\"24-hours-from-now\")} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                Fraction.parse(state.trade!.executionPrice.invert().toFixed(state.toToken!.decimals))\n            ) ? (\n                            <PriceTooLowButton />\n                        ) : state.unsupported ? (\n                            <UnsupportedButton state={state} />\n                        ) : state.loading || !state.trade ? (\n                            <FetchingButton />\n                        ) : (\n                                    <>\n                                        <ApproveButton\n                                            token={state.fromToken!}\n                                            spender={SETTLEMENT}\n                                            onSuccess={() => setAllowed(true)}\n                                            onError={setError}\n                                            hidden={allowed}\n                                        />\n                                        <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                                    </>\n                                )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"set-price-greater-than-market\")} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return (\n        <Button title={t(\"place-limit-order\")} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />\n    );\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}