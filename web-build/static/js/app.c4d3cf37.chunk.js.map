{"version":3,"sources":["src/utils/analytics-utils.ts","assets/icon1_1.png","assets/icon1_2.png","assets/icon2_1.png","assets/icon2_2.png","assets/icon3_1.png","assets/icon3_2.png","assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/flags/fr.png","assets/flags/es.png","assets/flags/jp.png","assets/cattle-2.png","assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.png","src/constants/tokens.ts","src/hooks/useLinker.tsx","src/constants/Fraction.ts","src/constants/dimension.ts","src/utils/getContract.ts","src/utils/index.ts","src/components/Content.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Button.tsx","src/utils/fetch-utils.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/hooks/useStyles.tsx","src/components/Container.tsx","src/components/Title.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/web/WebSubMenu.tsx","src/hooks/useSwapRouter.tsx","src/hooks/useSettlement.tsx","src/context/GlobalContext.tsx","src/context/EthersContext.tsx","assets/cattle-1.png","src/constants/contracts.ts","src/hooks/useTranslation.tsx","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","assets/bg.jpeg","assets/bg2.jpeg","globals.js","src/components/Text.tsx","src/components/FlexView.tsx","assets/logo-1.png","assets/logo-2.png"],"names":["logTransaction","tx","name","a","async","args","Analytics","hash","value","toString","gasLimit","gasPrice","chainId","module","exports","ETH","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","Fraction","numerator","denominator","this","sdk","numeratorToken","denominatorToken","mul","pow","NAN","isEmptyValue","ZERO","parseBalance","BASE","isNaN","isZero","fraction","div","eq","gt","lt","maxFractions","str","formatBalance","endsWith","substring","length","Zero","One","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","ZapIn","ZapOut","getContract","signerOrProvider","contract","Contract","formatUSD","maxFraction","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","substr","utils","formatUnits","parseUnits","text","isBigNumber","replace","isETH","token","toLowerCase","isWETH","WETH","isETHWETHPair","fromToken","toToken","convertToken","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","parseCurrencyAmount","toExact","deduct","percent","sub","pow10","exp","Content","props","darkMode","useContext","GlobalContext","useColors","borderDark","background","useStyles","border","shadow","color","backgroundColor","marginLeft","marginRight","marginTop","marginBottom","padding","SocialIcons","icon1_1","textLight","useLinker","uri","require","icon1_2","icon2_1","icon2_2","icon3_1","icon3_2","FlexView","justifyContent","TouchableOpacity","onPress","Image","source","FLAGS","us","cn","kr","fr","es","jp","Flag","locale","location","useLocation","TouchableHighlight","pathname","marginHorizontal","Cattle","useState","isHover","setIsHover","position","top","right","onMouseOver","onMouseOut","onError","WebFooter","simple","header","ethereum","isMetaMask","View","alignItems","bottom","Button","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","disabled","loading","undefined","loadingProps","buttonStyle","paddingHorizontal","borderColor","borderWidth","titleStyle","disabledTitleStyle","disabledStyle","fetchTokens","account","customTokens","fetch","response","json","tokens","fetchTokenBalances","map","balances","ALCHEMY_PROVIDER","getBalance","i","fetchTokenWithValue","weth","wethPriceUSD","getPair","provider","fetched","priceUSD","Number","valueUSD","apply","pair","priceETH","convert","priceOf","fetchPools","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","poolId","reduce","sushiPerBlock","floor","allocPoint","totalAllocPoint","fetchPool","slpBalance","Promise","all","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","totalValueETH","totalSupply","tokenA","tokenB","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","filter","fetchMyPools","fetchMyPool","fetchMyStake","id","myStake","amountDeposited","pendingSushi","lpToken","stakedValue","masterChef","MASTER_CHEF","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","console","log","LP_TOKEN_SCANNER","factoryContract","allPairsLength","scanner","pages","page","findPairs","min","toNumber","pairs","flat","index","erc20","find","t","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","fetchLPTokenWithValue","fetchTotalValue","values","add","lpPair","tokenWithValue","tokenReserve","reserveOf","tokenPrice","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","signer","kovanSigner","canceledHashes","orderBook","ORDER_BOOK","SETTLEMENT","settlement","getAddress","maker","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","Order","amountIn","amountOutMin","recipient","deadline","v","r","s","filledAmountInOfHash","includes","myOrders","sort","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","submenu","textDark","overlay","dark","shadowColor","attrs","borderRadius","radius","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","Container","select","web","contentContainerStyle","flex","default","Title","AppHeader","StatusBar","translucent","ConnectButton","useTranslation","setEthereum","EthersContext","metaMask","request","method","alert","title","containerStyle","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","WebScreen","Text","textAlign","left","ConnectToWallet","AppScreen","useQuery","URLSearchParams","search","Screen","setLocale","query","useEffect","WBTC","Token","DAI","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","bases","basePairs","flatMap","base","otherBase","t0","t1","allPairCombinations","Boolean","b","customBases","customBasesA","customBasesB","equals","Fetcher","fetchPairData","useSDK","getTotalSupply","getTrade","fromAmount","eth","to","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","minted","getLiquidityMinted","raw","SwapSubMenu","WebSubMenu","items","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","FarmingSubMenu","alignSelf","item","MenuItem","key","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","functions","arg","addLiquidity","Date","getTime","fromAmount_min","toAmount_min","signerAddr","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","amount_min","amountEth_min","signer_addr","calculateSwapFee","now","filledAmountIn","canceled","hashOfOrder","signMessage","arrayify","signature","splitSignature","sign","useSettlement","createOrder","order","toArgs","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","parse","React","createContext","load","clear","_locale","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","children","colorScheme","useColorScheme","Localization","Provider","AsyncStorage","getItem","mode","mne","removeItem","l","setItem","GlobalContextConsumer","Consumer","providers","AlchemyProvider","KOVAN_PROVIDER","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","onChainChanged","onDisconnect","on","off","lookupAddress","ens","list","JSON","findIndex","custom","stringify","spender","MaxUint256","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","EthersContextConsumer","SUSHI_BAR","SUSHI_ROLL","ZAP_IN","ZAP_OUT","i18n","translations","en","zh","ko","defaultLocale","fallbacks","ContextProvider","SvgMoon","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","fill","d","SvgSun","cx","cy","transform","DarkModeSwitch","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","connected","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","logo1","logo2","SvgLogo","Menu","borderStyle","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","WebScreens","menuExpanded","setMenuExpanded","image","image2","styles","StyleSheet","create","ImageBackground","fallback","exact","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","global","Buffer","medium","note","h1Style","h2Style","h3Style","h4Style","caption","flexDirection","direction"],"mappings":"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","file":"static/js/app.c4d3cf37.chunk.js","sourcesContent":["import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","module.exports = __webpack_public_path__ + \"static/media/icon1_1.cfa29a39.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1_2.d0d52152.png\";","module.exports = __webpack_public_path__ + \"static/media/icon2_1.c77b6ea8.png\";","module.exports = __webpack_public_path__ + \"static/media/icon2_2.b5c0186c.png\";","module.exports = __webpack_public_path__ + \"static/media/icon3_1.bcd92b01.png\";","module.exports = __webpack_public_path__ + \"static/media/icon3_2.d02cc9e2.png\";","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/fr.dda60be7.png\";","module.exports = __webpack_public_path__ + \"static/media/es.82844a36.png\";","module.exports = __webpack_public_path__ + \"static/media/jp.27444bf9.png\";","module.exports = __webpack_public_path__ + \"static/media/cattle-2.ac2f18d7.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.8655e604.png\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://www.kobeswap.org/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import { Fraction as SDKFraction } from \"@iwanwang/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport ZapIn from \"@sushiswap/zapper/artifacts/Sushiswap_ZapIn_General_V2.json\";\nimport ZapOut from \"@sushiswap/zapper/artifacts/Sushiswap_ZapOut_General_V1.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner },\n    ZapIn,\n    ZapOut\n};\n\nconst getContract = (name: string, address: string, signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport default getContract;\n","import { ChainId, CurrencyAmount, Percent, Token as SDKToken, TokenAmount, WETH } from \"@iwanwang/sdk\";\nimport { ethers } from \"ethers\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport getContract from \"./getContract\";\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const isETH = (token?: Token) => token?.address.toLowerCase() === ETH.address.toLowerCase();\n\nexport const isWETH = (token?: Token) => token?.address.toLowerCase() === WETH[1].address.toLowerCase();\n\nexport const isETHWETHPair = (fromToken?: Token, toToken?: Token) => {\n    return (isETH(fromToken) && isWETH(toToken)) || (isWETH(fromToken) && isETH(toToken));\n};\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const deduct = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n\nexport { getContract };\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    // ...border({ color: darkMode ? borderColor : undefined }),\n                    ...border({ color: darkMode ? \"#084EA4\" : \"#A0A0A0\" }),\n                    // ...shadow(),\n                    backgroundColor: darkMode ? \"#191F2B\" : \"#FFFFFF\",\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nimport { Image, TouchableOpacity, TouchableHighlight, View, Linking } from \"react-native\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n\n    const icon1_1 = { uri: require(\"../../assets/icon1_1.png\") };\n    const icon1_2 = { uri: require(\"../../assets/icon1_2.png\") };\n    const icon2_1 = { uri: require(\"../../assets/icon2_1.png\") };\n    const icon2_2 = { uri: require(\"../../assets/icon2_2.png\") };\n    const icon3_1 = { uri: require(\"../../assets/icon3_1.png\") };\n    const icon3_2 = { uri: require(\"../../assets/icon3_2.png\") };\n\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            {/* <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            /> */}\n\n            <TouchableOpacity style={{width: 45}} onPress={() => {window.open(\"https://github.com/ironminter/shabushabu\");}}>\n                <Image style={{ height: 32, width: 34 }}\n                    source={darkMode ? icon1_2 : icon1_1}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={{width: 45}} onPress={() => {window.open(\"Https://twitter.com/shabufinance\");}}>\n                <Image style={{ height: 33, width: 32 }}\n                    source={darkMode ? icon2_2 : icon2_1}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={{width: 45}} onPress={() => {window.open(\"https://medium.com/@shabushabu\");}}>\n                <Image style={{ height: 33, width: 30 }}\n                    source={darkMode ? icon3_2 : icon3_1}\n                />\n            </TouchableOpacity>\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React, {useState} from \"react\";\nimport { Image, TouchableOpacity, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing, IS_DESKTOP } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\nimport useColors from \"../../hooks/useColors\";\n\nconst FLAGS = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\"),\n    fr: require(\"../../../assets/flags/fr.png\"),\n    es: require(\"../../../assets/flags/es.png\"),\n    jp: require(\"../../../assets/flags/jp.png\")\n};\n\nconst ALCHEMY_URL = \"https://dashboard.alchemyapi.io/signup?referral=429fb682-0d85-40ab-ad88-daf847cf7c63\";\n\nconst WebFooter = ({ simple = false }) => {\n    const onPressAlchemy = useLinker(ALCHEMY_URL, \"\", \"_blank\");\n    const { header, borderDark } = useColors();\n\n    const metaMask = window.ethereum?.isMetaMask || false;\n\n    return (\n        <View style={{\n            width: \"100%\",\n            padding: Spacing.small,\n            alignItems: \"center\",\n            position: IS_DESKTOP ? \"fixed\" : \"\",\n            bottom: 0,\n            backgroundColor: IS_DESKTOP ? header : \"transparent\"\n        }}>\n            {!simple && (\n                <>\n                    <SocialIcons />\n                    {/* <TouchableHighlight onPress={onPressAlchemy}>\n                        <Image\n                            source={require(\"../../../assets/alchemy.png\")}\n                            style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                        />\n                    </TouchableHighlight> */}\n                </>\n            )}\n            {/* <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                Built with ❤️ by KobeSwap (v{Constants.manifest.version})\n            </Text> */}\n            <FlexView style={{ marginTop: Spacing.small }}>\n                <Flag name={\"us\"} locale={\"en\"} />\n                <Flag name={\"es\"} locale={\"es\"} />\n                <Flag name={\"fr\"} locale={\"fr\"} />\n                <Flag name={\"cn\"} locale={\"zh\"} />\n                <Flag name={\"jp\"} locale={\"jp\"} />\n                <Flag name={\"kr\"} locale={\"ko\"} />\n            </FlexView>\n\n            {IS_DESKTOP && <Cattle/>}\n\n        </View>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={FLAGS[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nconst Cattle = () => {\n    const [isHover, setIsHover] = useState({ uri: require(\"../../../assets/cattle-1.png\") });\n\n    return (\n        <div style={{\n                position: \"absolute\",\n                top: -256,\n                right: -50,\n                width: 430,\n                height: 300,\n            }} onMouseOver={() => {setIsHover({ uri: require(\"../../../assets/cattle-2.png\") })}}\n            onMouseOut={() => {setIsHover({ uri: require(\"../../../assets/cattle-1.png\") })}}>\n                <Image\n                    source={isHover}\n                    onError={() => { }}\n                    style={{\n                        width: 430,\n                        height: 300\n                    }}\n                />\n            </div>\n    );\n}\n\nexport default WebFooter;\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color,\n                    borderWidth: 1\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import { /*FACTORY_ADDRESS as SUSHISWAP_FACTORY,*/ Pair } from \"@iwanwang/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT, SUSHISWAP_FACTORY } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSettlement\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport {\n    convertToken,\n    formatBalance,\n    getContract,\n    isETH,\n    isWETH,\n    parseBalance,\n    parseCurrencyAmount,\n    pow10\n} from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://www.kobeswap.org/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ];\n};\n\nexport const fetchTokenWithValue = async (\n    token: Token,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    return fetched;\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    console.log(\"-----factory : \" + factory);\n    console.log(\"-----scanner : \" + LP_TOKEN_SCANNER);\n    console.log(\"-----my addr : \" + account);\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nexport const fetchLPTokenWithValue = async (\n    lpToken: LPToken,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ffffff\",\n        submenu: \"#ffffff80\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#000000\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#666666\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#101216\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#FFFFFF\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            disabled={props.disabled}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport Button from \"../Button\";\nimport WebFooter from \"./WebFooter\";\nimport Content from \"../Content\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const { background } = useColors();\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.png\");\n    return (\n        <Content>\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Image\n                    source={source}\n                    style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n                />\n                {window.ethereum && <ConnectButton />}\n                <WalletConnectButton />\n                {!IS_DESKTOP && <WebFooter simple={true} />}\n            </View>\n        </Content>\n    );\n};\n\nconst ConnectButton = () => {\n    const t = useTranslation();\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(t(\"no-ethereum-provider-found\"));\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : t(\"connect\")}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext, useEffect } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { useLocation } from \"react-router-dom\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst Screen = props => {\n    const { setLocale } = useContext(GlobalContext);\n    const query = useQuery();\n    useEffect(() => {\n        const locale = query.get(\"locale\");\n        if (locale) {\n            setLocale(locale);\n        }\n    }, [query]);\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nconst useQuery = () => {\n    const location = useLocation();\n    return new URLSearchParams(location.search);\n};\n\nexport default Screen;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@iwanwang/sdk\";\nimport { ethers } from \"ethers\";\n\nconst WBTC = new Token(ChainId.MAINNET, \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\", 8, \"WBTC\", \"Wrapped BTC\");\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], WBTC, DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET], WBTC]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@iwanwang/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                console.log(\"-----pairs : \" + pairs);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"new-order\"),\n                    path: \"/swap\"\n                },\n                {\n                    title: t(\"my-orders\"),\n                    path: \"/swap/my-orders\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const LiquiditySubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"add-liquidity\"),\n                    path: \"/liquidity\"\n                },\n                {\n                    title: t(\"remove-liquidity\"),\n                    path: \"/liquidity/remove\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const MigrateSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"migrate-liquidity\"),\n                    path: \"/migrate\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const StakingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"stake\"),\n                    path: \"/staking\"\n                },\n                {\n                    title: t(\"unstake\"),\n                    path: \"/staking/unstake\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const FarmingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"plant-lp-tokens\"),\n                    path: \"/farming\"\n                },\n                {\n                    title: t(\"harvest-sushi\"),\n                    path: \"/farming/harvest\"\n                }\n            ]}\n        />\n    );\n};\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@iwanwang/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const fromAmount_min = deduct(fromAmount, allowedSlippage);\n            const toAmount_min = deduct(toAmount, allowedSlippage);\n            const signerAddr = await signer.getAddress();\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                fromAmount_min,\n                toAmount_min,\n                signerAddr,\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const amount_min = deduct(amount, allowedSlippage);\n            const amountEth_min = deduct(amountETH, allowedSlippage);\n            const signer_addr = await signer.getAddress();\n            const args = [\n                token.address,\n                amount,\n                amount_min,\n                amountEth_min,\n                signer_addr,\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import { useCallback } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport Token from \"../types/Token\";\nimport { getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSettlement = () => {\n    const { calculateSwapFee } = useSwapRouter();\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        const fraction = Fraction.parse(price);\n        return swapFeeDeducted\n            .mul(pow10(toToken.decimals))\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .div(pow10(fromToken.decimals));\n    };\n\n    return { createOrder, cancelOrder, queryOrderFilledEvents, calculateLimitOrderFee, calculateLimitOrderReturn };\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSettlement;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport * as Localization from \"expo-localization\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    locale: \"\",\n    setLocale: async (_locale: string) => {},\n    darkMode: false,\n    setDarkMode: async (_darkMode: boolean) => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [locale, setLocale] = useState(Localization.locale);\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    setLocale((await AsyncStorage.getItem(\"locale\")) || Localization.locale);\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                locale,\n                setLocale: async (l: string) => {\n                    await AsyncStorage.setItem(\"locale\", l);\n                    setLocale(l);\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport useSDK from \"../hooks/useSDK\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { getContract, isWETH } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens, fetchTokenWithValue } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    //__DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n    \"zQgmZhG80untFO8iHWNQ5SoPL1hHiTp-\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as TokenWithValue[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const { getPair } = useSDK();\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<TokenWithValue[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const list = await fetchTokens(address, customTokens);\n                const weth = list.find(t => isWETH(t));\n                if (list?.length > 0 && weth && provider) {\n                    const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                    setTokens(\n                        await Promise.all(\n                            list.map(\n                                async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider)\n                            )\n                        )\n                    );\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","module.exports = __webpack_public_path__ + \"static/media/cattle-1.316a9a72.png\";","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_FACTORY = \"0x4Da45E0B80d15d1902E69Dc311AfCE75702Ab8C9\";\nexport const SUSHISWAP_ROUTER = \"0x7F8fa2ca53E7737C3E89723CF27F4cC2606DC57F\";//modified\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"\";//0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x7243BADF7EaD94Dfcd25c3ddE7d45ecb80dCf61E\";//modified\nexport const SUSHI_ROLL = \"0xA911EAd270C17da0B11633A2D7D7F8Ed2b34b904\";//modified\nexport const LP_TOKEN_SCANNER = \"0xbC5aF64F830Fe77Bb7CDf998224ee0FC3D630048\";//modified\nexport const ZAP_IN = \"0xfF350eDc2242Ca4d7252A64746aec4A5487a852B\";\nexport const ZAP_OUT = \"0xf12CAB7Acaa14Eed3bEa82199ea2f5c2C2194B81\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = \"0xDA41ef40CF5F2D80fF12b5F3D5E54797DfcdBe48\";//Settlement.address;\n","import { useContext } from \"react\";\n\nimport i18n from \"i18n-js\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useTranslation = () => {\n    const { locale } = useContext(GlobalContext);\n    i18n.translations = {\n        en: require(\"../constants/strings/en.json\"),\n        zh: require(\"../constants/strings/zh.json\"),\n        ko: require(\"../constants/strings/ko.json\"),\n        fr: require(\"../constants/strings/fr.json\"),\n        es: require(\"../constants/strings/es.json\"),\n        jp: require(\"../constants/strings/jp.json\")\n    };\n    i18n.locale = locale;\n    i18n.defaultLocale = \"en-US\";\n    i18n.fallbacks = true;\n    return i18n.t;\n};\n\nexport default useTranslation;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#FA52A0\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#FA52A0\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={props.style}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\n// tslint:disable-next-line:max-func-body-length\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const t = useTranslation();\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={t(\"menu.home\")} path={\"/\"} />\n                        <MobileWebMenuItem title={t(\"menu.swap\")} path={\"/swap\"} />\n                        <MobileWebMenuItem title={t(\"menu.liquidity\")} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n                        <MobileWebMenuItem title={t(\"menu.stake\")} path={\"/staking\"} />\n                        {/* <MobileWebMenuItem title={t(\"menu.farm\")} path={\"/farming\"} /> */}\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const t = useTranslation();\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : t(\"menu.not-connected\");\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{ fontFamily: \"regular\", fontSize: 15, color: accent, alignSelf: \"flex-end\" }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport SvgLogoDark from \"../svg/SvgLogoDark\";\nimport SvgLogoLight from \"../svg/SvgLogoLight\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                \n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n\n    const logo1 = { uri: require(\"../../../assets/logo-1.png\") };\n    const logo2 = { uri: require(\"../../../assets/logo-2.png\") };\n\n    const SvgLogo = darkMode ? logo1 : logo2;\n    \n    return (\n        <View style={{ alignSelf: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                {/* <SvgLogo width={259} height={45} style={{ marginTop: 8, marginLeft: -16 }} /> */}\n                <Image\n                    source={SvgLogo}\n                    style={{\n                        marginTop: 0,\n                        marginLeft: -16,\n                        width: 223,\n                        height: 69\n                    }}\n                />\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    const t = useTranslation();\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={t(\"menu.home\")} path={\"/\"} />\n            <MenuItem title={t(\"menu.swap\")} path={\"/swap\"} />\n            <MenuItem title={t(\"menu.liquidity\")} path={\"/liquidity\"} />\n            <MenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n            <MenuItem title={t(\"menu.stake\")} path={\"/staking\"} />\n            {/* <MenuItem title={t(\"menu.farm\")} path={\"/farming\"} /> */}\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = (path === \"/\" ? match?.isExact : true) && match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{\n            marginLeft: Spacing.tiny,\n            marginBottom: -4,\n            textDecoration: \"none\",\n            borderStyle: \"solid\",\n            borderWidth: \"5px\",\n            borderColor: \"transparent\"\n        }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? \"#FF3333\" : textLight,\n                    padding: 3,\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const t = useTranslation();\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : t(\"menu.not-connected\");\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(t(\"do-you-want-to-disconnect\"))) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                {/* <BackgroundImage /> */}\n                <Content>\n                    <Title text={t(\"loading\")} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nimport { ImageBackground, StyleSheet } from \"react-native\";\nimport Container from \"../components/Container\";\nimport WebFooter from \"../components/web/WebFooter\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n\n    const { darkMode } = useContext(GlobalContext);\n    const image = { uri: require(\"../../assets/bg.jpeg\") };\n    const image2 = { uri: require(\"../../assets/bg2.jpeg\") };\n\n    const styles = StyleSheet.create({\n        image: {\n            // flex: 1,\n            // resizeMode: \"cover\",\n            // justifyContent: \"center\"\n            width: \"100%\",\n            height: \"100%\"\n        },\n    });\n\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                {/* <Container> */}\n                <ImageBackground source={darkMode ? image2 : image} style={styles.image}>\n                    <Suspense fallback={<EmptyScreen />}>\n                        <Switch>\n                            <Route path={\"/swap/my-orders\"}>\n                                <MyLimitOrdersScreen />\n                            </Route>\n                            <Route path={\"/swap\"}>\n                                <SwapScreen />\n                            </Route>\n                            <Route path={\"/liquidity/migrate\"}>\n                                <Redirect to={\"/migrate\"} />\n                            </Route>\n                            <Route path={\"/liquidity/remove\"}>\n                                <RemoveLiquidityScreen />\n                            </Route>\n                            <Route path={\"/liquidity\"}>\n                                <LiquidityScreen />\n                            </Route>\n                            <Route path={\"/farming/harvest\"}>\n                                <HarvestScreen />\n                            </Route>\n                            <Route path={\"/farming\"}>\n                                <FarmingScreen />\n                            </Route>\n                            <Route path={\"/migrate\"}>\n                                <MigrateScreen />\n                            </Route>\n                            <Route path={\"/staking/unstake\"}>\n                                <UnstakeScreen />\n                            </Route>\n                            <Route path={\"/staking\"}>\n                                <StakeScreen />\n                            </Route>\n                            <Route path={\"/\"} exact={true}>\n                                <HomeScreen />\n                            </Route>\n                            <Redirect to={\"/\"} />\n                        </Switch>\n                    </Suspense>\n                    \n                    <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                </ImageBackground>\n                {/* </Container> */}\n\n                {IS_DESKTOP && <WebFooter />}\n\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/bg.28f4f08c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.c25819b6.jpeg\";","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","module.exports = __webpack_public_path__ + \"static/media/logo-1.c382acfb.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-2.0bf7f705.png\";"],"sourceRoot":""}